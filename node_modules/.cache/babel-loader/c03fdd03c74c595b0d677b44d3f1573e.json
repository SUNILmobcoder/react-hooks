{"ast":null,"code":"var _jsxFileName = \"/home/mobcoder/Desktop/gitlab/Vishal/freshers_web_2021/react-lifecycle/functional-hooks-or-lifecycle/src/UseMemo.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UseMemo() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: number,\n      onChange: e => setNumber(parseInt(e.currentTarget.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDark(prevDark => !prevDark),\n      children: \"Change Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: themeStyles,\n      children: doubleNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = UseMemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseMemo\");","map":{"version":3,"sources":["/home/mobcoder/Desktop/gitlab/Vishal/freshers_web_2021/react-lifecycle/functional-hooks-or-lifecycle/src/UseMemo.jsx"],"names":["React","UseMemo","number","e","setNumber","parseInt","currentTarget","value","setDark","prevDark","themeStyles","doubleNumber"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAC9B,sBACI;AAAA,4BACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAEC,MAA7B;AAAqC,MAAA,QAAQ,EAAEC,CAAC,IAAIC,SAAS,CAACC,QAAQ,CAACF,CAAC,CAACG,aAAF,CAAgBC,KAAjB,CAAT;AAA7D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,QAAQ,IAAI,CAACA,QAAd,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,KAAK,EAAEC,WAAZ;AAAA,gBAA0BC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH;KARuBV,O","sourcesContent":["import React from 'react'\n\nexport default function UseMemo() {\n    return (\n        <>\n            <input  type=\"number\" value={number} onChange={e => setNumber(parseInt(e.currentTarget.value))} />\n            <button onClick={() => setDark(prevDark => !prevDark)}>Change Theme</button>\n            <div style={themeStyles}>{doubleNumber}</div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}