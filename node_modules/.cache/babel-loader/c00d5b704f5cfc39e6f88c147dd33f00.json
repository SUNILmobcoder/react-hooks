{"ast":null,"code":"var _jsxFileName = \"/home/mobcoder/Desktop/gitlab/Vishal/freshers_web_2021/react-lifecycle/functional-hooks-or-lifecycle/src/TodoReducer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ACTION = {\n  ADD_TODO: 'add-todo',\n  TOGGLE_TODO: 'toggle-todo',\n  DELETE_TODO: 'delete-todo'\n};\n\nfunction reducer(todos, action) {\n  switch (action.type) {\n    case ACTION.ADD_TODO:\n      return [...todos, newTodo(action.payload.name)];\n\n    case ACTION.TOGGLE_TODO:\n      return todos.map(todo => {\n        if (todo.id === action.payload.id) {\n          return { ...todo,\n            complete: !todo.complete\n          };\n        }\n\n        return todo;\n      });\n\n    case ACTION.DELETE_TODO:\n      return todos.filter(todo => todo.id !== action.payload.id);\n\n    default:\n      return todos;\n  }\n}\n\nfunction newTodo(name) {\n  return {\n    id: Date.now(),\n    name: name,\n    complete: false\n  };\n}\n\nexport default function TodoReducer() {\n  _s();\n\n  const [todos, dispatch] = useReducer(reducer, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo,\n        dispatch: dispatch\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true);\n}\n\n_s(TodoReducer, \"e5LW/4uLPvWyBaaEOxnvXNL6Cyc=\");\n\n_c = TodoReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoReducer\");","map":{"version":3,"sources":["/home/mobcoder/Desktop/gitlab/Vishal/freshers_web_2021/react-lifecycle/functional-hooks-or-lifecycle/src/TodoReducer.jsx"],"names":["React","useState","useReducer","ACTION","ADD_TODO","TOGGLE_TODO","DELETE_TODO","reducer","todos","action","type","newTodo","payload","name","map","todo","id","complete","filter","Date","now","TodoReducer","dispatch","handleSubmit","e","setName","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;;;AAEA,OAAO,MAAMC,MAAM,GAAG;AAClBC,EAAAA,QAAQ,EAAE,UADQ;AAElBC,EAAAA,WAAW,EAAE,aAFK;AAGlBC,EAAAA,WAAW,EAAE;AAHK,CAAf;;AAMP,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,MAAM,CAACC,QAAZ;AACI,aAAO,CAAC,GAAGI,KAAJ,EAAWG,OAAO,CAACF,MAAM,CAACG,OAAP,CAAeC,IAAhB,CAAlB,CAAP;;AACJ,SAAKV,MAAM,CAACE,WAAZ;AACI,aAAOG,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAI;AACrB,YAAGA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAA9B,EAAkC;AAC9B,iBAAO,EAAE,GAAGD,IAAL;AAAWE,YAAAA,QAAQ,EAAE,CAACF,IAAI,CAACE;AAA3B,WAAP;AACH;;AACD,eAAOF,IAAP;AACH,OALM,CAAP;;AAMJ,SAAKZ,MAAM,CAACG,WAAZ;AACI,aAAOE,KAAK,CAACU,MAAN,CAAaH,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAAhD,CAAP;;AACJ;AACI,aAAOR,KAAP;AAbR;AAeH;;AAED,SAASG,OAAT,CAAiBE,IAAjB,EAAuB;AACnB,SAAO;AAAEG,IAAAA,EAAE,EAACG,IAAI,CAACC,GAAL,EAAL;AAAiBP,IAAAA,IAAI,EAAEA,IAAvB;AAA6BI,IAAAA,QAAQ,EAAE;AAAvC,GAAP;AACH;;AACD,eAAe,SAASI,WAAT,GAAuB;AAAA;;AAClC,QAAM,CAACb,KAAD,EAAQc,QAAR,IAAoBpB,UAAU,CAACK,OAAD,EAAU,EAAV,CAApC;AACA,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEgB,YAAhB;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEV,IAA1B;AAAgC,QAAA,QAAQ,EAAEW,CAAC,IAAIC,OAAO,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKnB,KAAK,CAACM,GAAN,CAAWC,IAAI,IAAI;AAChB,0BAAO,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,QAAQ,EAAEO;AAA1C,SAAWP,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA,CAJL;AAAA,kBADJ;AAUH;;GAZuBK,W;;KAAAA,W","sourcesContent":["import React, {useState, useReducer} from 'react';\n\nexport const ACTION = {\n    ADD_TODO: 'add-todo',\n    TOGGLE_TODO: 'toggle-todo',\n    DELETE_TODO: 'delete-todo'\n}\n\nfunction reducer(todos, action) {\n    switch(action.type) {\n        case ACTION.ADD_TODO:\n            return [...todos, newTodo(action.payload.name)]\n        case ACTION.TOGGLE_TODO:\n            return todos.map(todo => {\n                if(todo.id === action.payload.id) {\n                    return { ...todo, complete: !todo.complete}\n                }\n                return todo\n            })\n        case ACTION.DELETE_TODO:\n            return todos.filter(todo => todo.id !== action.payload.id)\n        default:\n            return todos;\n    }\n}\n\nfunction newTodo(name) {\n    return { id:Date.now(), name: name, complete: false}\n}\nexport default function TodoReducer() {\n    const [todos, dispatch] = useReducer(reducer, [])\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" value={name} onChange={e => setName(e.target.value)}/>\n            </form> \n            {todos.map( todo => {\n                return <Todo key={todo.id} todo={todo} dispatch={dispatch} />\n            })}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}