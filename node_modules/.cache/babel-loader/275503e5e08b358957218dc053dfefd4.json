{"ast":null,"code":"var _jsxFileName = \"/home/mobcoder/Desktop/gitlab/Vishal/freshers_web_2021/react-lifecycle/functional-hooks-or-lifecycle/src/useRef.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function USEREF() {\n  _s();\n\n  const [name, setName] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"My name is \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"I render \", x, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(USEREF, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n\n_c = USEREF;\n\nvar _c;\n\n$RefreshReg$(_c, \"USEREF\");","map":{"version":3,"sources":["/home/mobcoder/Desktop/gitlab/Vishal/freshers_web_2021/react-lifecycle/functional-hooks-or-lifecycle/src/useRef.jsx"],"names":["React","useState","USEREF","name","setName","e","target","value","x"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,sBACI;AAAA,4BACI;AAAO,MAAA,KAAK,EAAEE,IAAd;AAAoB,MAAA,QAAQ,EAAEE,CAAC,IAAID,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gCAAiBJ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BAAeK,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH;;GATuBN,M;;KAAAA,M","sourcesContent":["import React, { useState } from 'react'\n\nexport default function USEREF() {\n    const [name, setName] = useState('')\n    return (\n        <>\n            <input value={name} onChange={e => setName(e.target.value)} />\n            <div>My name is {name}</div>\n            <div>I render {x} times</div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}