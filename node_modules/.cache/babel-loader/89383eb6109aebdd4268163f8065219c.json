{"ast":null,"code":"import _slicedToArray from\"/home/mobcoder/Desktop/Github/react-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/mobcoder/Desktop/Github/react-hooks/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/mobcoder/Desktop/Github/react-hooks/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useState,useReducer}from'react';import Todo from'./components/todo';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ACTION={ADD_TODO:'add-todo',TOGGLE_TODO:'toggle-todo',DELETE_TODO:'delete-todo'};function reducer(todos,action){switch(action.type){case ACTION.ADD_TODO:return[].concat(_toConsumableArray(todos),[newTodo(action.payload.name)]);case ACTION.TOGGLE_TODO:return todos.map(function(todo){if(todo.id===action.payload.id){return _objectSpread(_objectSpread({},todo),{},{complete:!todo.complete});}return todo;});case ACTION.DELETE_TODO:return todos.filter(function(todo){return todo.id!==action.payload.id;});default:return todos;}}function newTodo(name){return{id:Date.now(),name:name,complete:false};}export default function TodoReducer(){var _useReducer=useReducer(reducer,[]),_useReducer2=_slicedToArray(_useReducer,2),todos=_useReducer2[0],dispatch=_useReducer2[1];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];function handleSubmit(e){e.preventDefault();dispatch({type:ACTION.ADD_TODO,payload:{name:name}});setName('');}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:name,onChange:function onChange(e){return setName(e.target.value);}})}),todos.map(function(todo){return/*#__PURE__*/_jsx(Todo,{todo:todo,dispatch:dispatch},todo.id);})]});}","map":{"version":3,"sources":["/home/mobcoder/Desktop/Github/react-hooks/src/TodoReducer.jsx"],"names":["React","useState","useReducer","Todo","ACTION","ADD_TODO","TOGGLE_TODO","DELETE_TODO","reducer","todos","action","type","newTodo","payload","name","map","todo","id","complete","filter","Date","now","TodoReducer","dispatch","setName","handleSubmit","e","preventDefault","target","value"],"mappings":"2XAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,UAAzB,KAA0C,OAA1C,CAEA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,C,6IAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,CAClBC,QAAQ,CAAE,UADQ,CAElBC,WAAW,CAAE,aAFK,CAGlBC,WAAW,CAAE,aAHK,CAAf,CAMP,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwBC,MAAxB,CAAgC,CAC5B,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKP,CAAAA,MAAM,CAACC,QAAZ,CACI,mCAAWI,KAAX,GAAkBG,OAAO,CAACF,MAAM,CAACG,OAAP,CAAeC,IAAhB,CAAzB,GACJ,IAAKV,CAAAA,MAAM,CAACE,WAAZ,CACI,MAAOG,CAAAA,KAAK,CAACM,GAAN,CAAU,SAAAC,IAAI,CAAI,CACrB,GAAGA,IAAI,CAACC,EAAL,GAAYP,MAAM,CAACG,OAAP,CAAeI,EAA9B,CAAkC,CAC9B,sCAAYD,IAAZ,MAAkBE,QAAQ,CAAE,CAACF,IAAI,CAACE,QAAlC,GACH,CACD,MAAOF,CAAAA,IAAP,CACH,CALM,CAAP,CAMJ,IAAKZ,CAAAA,MAAM,CAACG,WAAZ,CACI,MAAOE,CAAAA,KAAK,CAACU,MAAN,CAAa,SAAAH,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYP,MAAM,CAACG,OAAP,CAAeI,EAA/B,EAAjB,CAAP,CACJ,QACI,MAAOR,CAAAA,KAAP,CAbR,CAeH,CAED,QAASG,CAAAA,OAAT,CAAiBE,IAAjB,CAAuB,CACnB,MAAO,CAAEG,EAAE,CAACG,IAAI,CAACC,GAAL,EAAL,CAAiBP,IAAI,CAAEA,IAAvB,CAA6BI,QAAQ,CAAE,KAAvC,CAAP,CACH,CACD,cAAe,SAASI,CAAAA,WAAT,EAAuB,CAClC,gBAA0BpB,UAAU,CAACM,OAAD,CAAU,EAAV,CAApC,4CAAOC,KAAP,iBAAcc,QAAd,iBACA,cAAwBtB,QAAQ,CAAC,EAAD,CAAhC,wCAAOa,IAAP,eAAaU,OAAb,eAEA,QAASC,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,CACrBA,CAAC,CAACC,cAAF,GACAJ,QAAQ,CAAC,CAACZ,IAAI,CAAEP,MAAM,CAACC,QAAd,CAAwBQ,OAAO,CAAE,CAACC,IAAI,CAAEA,IAAP,CAAjC,CAAD,CAAR,CACAU,OAAO,CAAC,EAAD,CAAP,CACH,CACD,mBACI,wCACI,aAAM,QAAQ,CAAEC,YAAhB,uBACI,cAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEX,IAA1B,CAAgC,QAAQ,CAAE,kBAAAY,CAAC,QAAIF,CAAAA,OAAO,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX,EAA3C,EADJ,EADJ,CAIKpB,KAAK,CAACM,GAAN,CAAW,SAAAC,IAAI,CAAI,CAChB,mBAAO,KAAC,IAAD,EAAoB,IAAI,CAAEA,IAA1B,CAAgC,QAAQ,CAAEO,QAA1C,EAAWP,IAAI,CAACC,EAAhB,CAAP,CACH,CAFA,CAJL,GADJ,CAUH","sourcesContent":["import React, {useState, useReducer} from 'react';\n\nimport Todo from './components/todo';\n\nexport const ACTION = {\n    ADD_TODO: 'add-todo',\n    TOGGLE_TODO: 'toggle-todo',\n    DELETE_TODO: 'delete-todo'\n}\n\nfunction reducer(todos, action) {\n    switch(action.type) {\n        case ACTION.ADD_TODO:\n            return [...todos, newTodo(action.payload.name)]\n        case ACTION.TOGGLE_TODO:\n            return todos.map(todo => {\n                if(todo.id === action.payload.id) {\n                    return { ...todo, complete: !todo.complete}\n                }\n                return todo\n            })\n        case ACTION.DELETE_TODO:\n            return todos.filter(todo => todo.id !== action.payload.id)\n        default:\n            return todos;\n    }\n}\n\nfunction newTodo(name) {\n    return { id:Date.now(), name: name, complete: false}\n}\nexport default function TodoReducer() {\n    const [todos, dispatch] = useReducer(reducer, []);\n    const [name, setName] = useState('');\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        dispatch({type: ACTION.ADD_TODO, payload: {name: name}})\n        setName('')\n    }\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" value={name} onChange={e => setName(e.target.value)}/>\n            </form> \n            {todos.map( todo => {\n                return <Todo key={todo.id} todo={todo} dispatch={dispatch} />\n            })}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}